# -*- mode: ruby -*-

require 'yaml'

CURRENT_DIR = File.dirname(File.expand_path(__FILE__))
LOCAL_CONFIG = YAML.load_file("#{CURRENT_DIR}/vagrant.yml")

# VAGRANT_NODES_COUNT replaced by vagrant.yml -> nb_swarm_nodes
# VAGRANT_NODES_PREFIX replaced by vagrant.yml -> nodes_prefix
# WITH_IP replaced by vagrant.yml -> subnet
# WITH_NETMASK replaced by vagrant.yml -> netmask
# WITH_SATA removed
# VAGRANT_NODES_OS replaced by vagrant.yml -> node_os

DEPLOY_NAME = LOCAL_CONFIG["deploy_name"]
NODES_COUNT = LOCAL_CONFIG["nb_swarm_nodes"]
MANAGERS_COUNT = [LOCAL_CONFIG["nb_manager_nodes"], 3].min
A1 = LOCAL_CONFIG["node_after_addr"]
NP = LOCAL_CONFIG["nodes_prefix"]
IP = LOCAL_CONFIG["subnet"]
IPS = IP.sub(".", "\.")
netmask = LOCAL_CONFIG["netmask"]
node_os = LOCAL_CONFIG["node_os"]
folder_to_mount = LOCAL_CONFIG["folder_to_mount"]

Vagrant.configure("2") do |config|

  config.vm.box = node_os

  # Disable default rsync of current host directory
  config.vm.synced_folder ".", "/vagrant", disabled: true

  (1..NODES_COUNT).each do |i|

    config.vm.define "#{NP}#{i}" do |node|

      node.ssh.forward_agent = true
      node.vm.hostname = "#{NP}#{i}"
      node.vm.network "private_network", ip: "#{IP}.#{A1+i}", netmask: "#{netmask}"
      node.vm.provision :shell, inline: "sed 's/127\.0\.0\.1.*node.*/#{IPS}#{A1+i} #{NP}#{i}/' -i /etc/hosts"

      node.vm.provider "virtualbox" do |vb|
        vb.name = "#{NP}#{i}"
        vb.memory = 1024
        vb.cpus = 1

#         if i == 1
#           node.vm.synced_folder("#{folder_to_mount}", '/workspaces/app', type: 'rsync',
#             rsync__exclude: ['.*/', '*.egg-info/', 'vagrant/'])
#         end
      end
    end
  end

  # Build the dockerswarm_worker Ansible group, ie nodes that are not managers
  if MANAGERS_COUNT < NODES_COUNT
    ansible_dockerswarm_worker_group = ["#{host_suffix}[#{MANAGERS_COUNT+1}:#{NODES_COUNT}]"]
  else
    ansible_dockerswarm_worker_group = []
  end

  config.vm.provision :ansible do |ansible|
    ansible.playbook = "../ansible/base-provision.yml"
#     ansible.playbook = "../ansible/roles/base-provision-addkey.yml"
#     ansible.playbook = "../ansible/base-provision-00-common.yml"
    ansible.extra_vars = {
      hostsname: "all"
    }

    # Add config to the inventory file
    ansible.groups = {
    "#{DEPLOY_NAME}" => ["#{NP}[1:#{NODES_COUNT}]"],
    "vagrant_overrides:children" => ["#{DEPLOY_NAME}"],
    "dev:children" => ["#{DEPLOY_NAME}"],
    "dev_overrides:children" => ["#{DEPLOY_NAME}"],
    "docker:children" => ["#{DEPLOY_NAME}"],
    "docker:vars" => {
      "dockerswarm_iface" => "eth1",
      "swarm_dev_ip" => "#{IP}.#{A1+1}" # first host
    },
    "dockerswarm_manager" => ["#{NP}[1:#{MANAGERS_COUNT}]"],
    "dockerswarm_worker" => ansible_dockerswarm_worker_group
    }
  end

end
